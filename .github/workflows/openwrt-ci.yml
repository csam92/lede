# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  push:
      branches: 
          # master为你需要编译的当前固件的分支
          - master

  release:
    types: [published]
#  schedule:
#   - cron: 0 20 * * *

#permissions:
#  contents: read

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-22.04

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout OpenWrt
        uses: actions/checkout@v4

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: true
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Install OpenWrt build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison gawk gcc-multilib g++-multilib \
          gettext git libncurses5-dev libssl-dev python3 python3-distutils rsync \
          subversion swig time unzip wget zlib1g-dev file ccache
          # Install po2lmo
          git clone https://github.com/openwrt-dev/po2lmo.git
          cd po2lmo && make && sudo cp po2lmo /usr/bin/    
          # 根据你的 OpenWrt 版本和自定义需求，可能还需要其他包，务必确保 gettext 已安装

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          echo 'src-git passwall https://github.com/xiaorouji/openwrt-passwall.git;main' >> ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        id: config # 给这一步一个id，如果后面需要引用其输出
        run: |
          rm -f ./.config*
          touch ./.config

          cat >> .config <<EOF
          # 基本系统设置
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_TARGET_IMAGES_PAD=y
          CONFIG_TARGET_ROOTFS_PARTSIZE=800 # 设置根分区大小为800MB
          CONFIG_PACKAGE_luci=y
          CONFIG_PACKAGE_luci-base=y
          # 主题
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-app-argon-config=y
          # 常用插件
          CONFIG_PACKAGE_luci-app-adblock=y
          #CONFIG_PACKAGE_luci-app-aria2=y
          CONFIG_PACKAGE_luci-app-ddns=y
          CONFIG_PACKAGE_luci-app-diskman=y
          CONFIG_PACKAGE_luci-app-filetransfer=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-opkg=y
          CONFIG_PACKAGE_luci-app-passwall=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ipt2socks=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Brook=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_haproxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ChinaDNS_NG=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_pdnsd=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_dns2socks=y
          #CONFIG_PACKAGE_luci-app-qbittorrent=y
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-upnp=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-vsftpd=y
          CONFIG_PACKAGE_luci-app-wol=y
          CONFIG_PACKAGE_luci-app-zerotier=y
          # 其他必要的包
          CONFIG_PACKAGE_autosamba=y
          CONFIG_PACKAGE_automount=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_wget=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_libcurl=y
          CONFIG_PACKAGE_libncurses=y
          CONFIG_PACKAGE_libreadline=y
          CONFIG_PACKAGE_libsqlite3=y
          CONFIG_PACKAGE_libxml2=y
          CONFIG_PACKAGE_lsof=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_openssh-sftp-server=y
          CONFIG_PACKAGE_tar=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_vim-full=y
          CONFIG_PACKAGE_zip=y
          CONFIG_PACKAGE_zlib=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_kmod-tun=y
          # USB驱动和文件系统支持
          CONFIG_PACKAGE_kmod-usb-core=y
          CONFIG_PACKAGE_kmod-usb-storage=y
          CONFIG_PACKAGE_kmod-usb-storage-uas=y
          CONFIG_PACKAGE_kmod-usb-uhci=y # USB 1.1
          CONFIG_PACKAGE_kmod-usb-ohci=y # USB 1.1
          CONFIG_PACKAGE_kmod-usb2=y     # USB 2.0
          CONFIG_PACKAGE_kmod-usb3=y     # USB 3.0
          CONFIG_PACKAGE_kmod-fs-ext4=y
          CONFIG_PACKAGE_kmod-fs-vfat=y
          CONFIG_PACKAGE_kmod-fs-exfat=y
          CONFIG_PACKAGE_kmod-fs-ntfs=y
          CONFIG_PACKAGE_block-mount=y
          # 语言
          CONFIG_PACKAGE_luci-i18n-base-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-firewall-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-opkg-zh-cn=y
          # Passwall 依赖
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
          # SSR Plus 依赖
          CONFIG_PACKAGE_luci-i18n-ssr-plus-zh-cn=y
          EOF

          # 清理行首空格，OpenWrt的配置解析器可能对这个敏感
          sed -i 's/^[ \\t]*//g' ./.config

          # 生成 .config 文件，并强制跳过先决条件检查
          make defconfig FORCE=1

      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
